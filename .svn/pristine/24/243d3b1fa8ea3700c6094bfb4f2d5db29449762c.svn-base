package kr.or.ddit.controller.nurse;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.web.multipart.MultipartFile;

public class ExcelUpload {
	
	public static List<ExcelVO> getExcelList(MultipartFile file) {
		List<ExcelVO> exList = new ArrayList<ExcelVO>();
		
		try {
			exList = readExcel(file.getInputStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return exList;
		
	}
	
	public static List<ExcelVO> readExcel(InputStream inputStream) throws IOException {
	    List<ExcelVO> dataList = new ArrayList<>();
	    XSSFWorkbook workbook = null;

	    try {
	        workbook = new XSSFWorkbook(inputStream);

	        Sheet sheet = workbook.getSheetAt(0); // 첫 번째 시트를 읽음

	        Iterator<Row> rowIterator = sheet.iterator();
	        while (rowIterator.hasNext()) {
	            Row row = rowIterator.next();

	            // 헤더 행 스킵
	            if (row.getRowNum() == 0) {
	                continue;
	            }

	            // 엑셀 데이터를 읽어서 ExcelVO 객체에 매핑
	            
	            // vo에 사번, 이름, 날짜별 근무(List<Map<int, String>>) 저장, 각 근무 형태 갯수도 저장?
	            
	            ExcelVO excelVO = new ExcelVO();
	            Cell noCell = row.getCell(0);
	            if (noCell.getCellTypeEnum() == CellType.NUMERIC) {
	                excelVO.setNo(String.valueOf((int) noCell.getNumericCellValue()));
	            } else if (noCell.getCellTypeEnum() == CellType.STRING) {
	                excelVO.setNo(noCell.getStringCellValue());
	            }
	            excelVO.setName(row.getCell(1).getStringCellValue());
	            excelVO.setGender(row.getCell(2).getStringCellValue());
	            excelVO.setPhone(row.getCell(3).getStringCellValue());

	            Cell ageCell = row.getCell(4);
	            excelVO.setAge((int) ageCell.getNumericCellValue());
	            
	            excelVO.setDate(row.getCell(5).getStringCellValue());

	            dataList.add(excelVO);
	        }
	    } finally {
	        if (workbook != null) {
	            workbook.close();
	        }
	    }

	    return dataList;
	}
}
