<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IEmpNoticeMapper">

	<sql id="empNoticeSearch">
		<if test="searchType != null and searchType == 'title'">
			and (EMP_NOTICE_TITLE like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'writer'">
			and (EMP_NOTICE_WRITER like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'content'">
			and ( (EMP_NOTICE_TITLE like '%'||#{searchWord}||'%')
			or (EMP_NOTICE_CONTENT like '%'||#{searchWord}||'%') )
		</if>
	</sql>
	
	<resultMap type="empNoticeVO" id="empNoticeMap">
		<id property="empNoticeNo" column="emp_notice_no"/>
		<result property="empNoticeNo" column="emp_notice_no"/>
		<result property="empNoticeTitle" column="EMP_NOTICE_TITLE"/>
		<result property="empNoticeWriter" column="EMP_NOTICE_WRITER"/>
		<result property="empNoticeDate" column="EMP_NOTICE_DATE"/>
		<result property="empNoticeContent" column="EMP_NOTICE_CONTENT"/>
		<result property="empNoticeHit" column="EMP_NOTICE_HIT"/>
		<result property="empNoticeFix" column="EMP_NOTICE_FIX"/>
	</resultMap>

	<insert id="insertEmpNotice" parameterType="empNoticeVO" useGeneratedKeys="true">
		<selectKey keyProperty="empNoticeNo" resultType="int" order="BEFORE">
			select EMP_NOTICE_SEQ.nextval from dual
		</selectKey>
		insert into EMP_NOTICE (
			EMP_NOTICE_NO, EMP_NOTICE_TITLE, EMP_NOTICE_WRITER, 
			EMP_NOTICE_DATE, EMP_NOTICE_CONTENT, EMP_NOTICE_FIX
		) values (
			#{empNoticeNo}, #{empNoticeTitle}, #{empNoticeWriter},
			sysdate, #{empNoticeContent}, #{empNoticeFix}
		)
	</insert>
	
	<select id="selectEmpNoticeCount" parameterType="pagingVO" resultType="int">
		select count(emp_notice_no)
		from emp_notice
		where 1=1
		<include refid="empNoticeSearch"/>
	</select>

	<select id="selectEmpNoticeList" parameterType="pagingVO" resultType="empNoticeVO">
		select
			b.*
		from (
			select
				a.*, 
<!-- 				row_number() over(order by a.emp_notice_no desc) rnum -->
				ROW_NUMBER() OVER(ORDER BY CASE WHEN a.EMP_NOTICE_FIX = 'Y' THEN 0 ELSE 1 END, a.EMP_NOTICE_NO DESC) AS rnum
			from (
				select
					emp_notice_no, EMP_NOTICE_TITLE, EMP_NOTICE_WRITER, 
					EMP_NOTICE_DATE, EMP_NOTICE_CONTENT, EMP_NOTICE_HIT,
					EMP_NOTICE_FIX
				from emp_notice
				where 1=1
				<include refid="empNoticeSearch"/>
				order by emp_notice_no desc
			) a
		) b
		<![CDATA[
			where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="incrementViewCount" parameterType="int">
		update emp_notice
		set
			emp_notice_hit = emp_notice_hit + 1
		where emp_notice_no = #{empNoticeNo}
	</select>

	<select id="selectEmpNoticeDetail" parameterType="int" resultMap="empNoticeMap">
		select
			emp_notice_no, EMP_NOTICE_TITLE, EMP_NOTICE_WRITER, EMP_NOTICE_WRITER, 
			EMP_NOTICE_DATE, EMP_NOTICE_CONTENT, EMP_NOTICE_HIT, EMP_NOTICE_FIX
		from emp_notice
		where emp_notice_no = #{empNoticeNo}
	</select>
	
	<update id="updateNotice" parameterType="empNoticeVO">
		update emp_notice
		set
			EMP_NOTICE_TITLE = #{empNoticeTitle},
			EMP_NOTICE_CONTENT = #{empNoticeContent},
			EMP_NOTICE_DATE = sysdate,
			EMP_NOTICE_FIX = #{empNoticeFix}
		where EMP_NOTICE_NO = #{empNoticeNo}
	</update>
	
	<delete id="deleteNotice" parameterType="int">
		delete from emp_notice
		where emp_notice_no = #{empNoticeNo}
	</delete>
</mapper>