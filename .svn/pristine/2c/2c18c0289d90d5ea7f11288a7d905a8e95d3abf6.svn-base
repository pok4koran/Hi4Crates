package kr.or.ddit.service.impl;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.mapper.IRadiationMapper;
import kr.or.ddit.service.IRadiationService;
import kr.or.ddit.vo.CommentVO;
import kr.or.ddit.vo.EquipmentVO;
import kr.or.ddit.vo.HistoryVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.RadiationRoomVO;
import kr.or.ddit.vo.RepairRequestVO;

@Service
public class RadiationServiceImpl implements IRadiationService{
	
	@Inject
	private IRadiationMapper radiationMapper;

	@Override
	public List<CommentVO> getCommentList() {
		return radiationMapper.getCommentList();
	}

	@Override
	public List<RadiationRoomVO> getRadiationRoomList() {
		return radiationMapper.getRadiationRoomList();
	}

	@Override
	public RadiationRoomVO getRadiationRoomInfo(int roomNo) {
		return radiationMapper.getRadiationRoomInfo(roomNo);
	}

	@Override
	public List<EquipmentVO> getEqList() {
		return radiationMapper.getEqList();
	}

	@Override
	public EquipmentVO getEqInfo(int eqNo) {
		return radiationMapper.getEqInfo(eqNo);
	}

	@Override
	public int updateEqInfo(EquipmentVO equipmentVO) {
		return radiationMapper.updateEqInfo(equipmentVO);
	}

	@Override
	public String getCommonCode(String codeName) {
		return radiationMapper.getCommonCode(codeName);
	}

	@Override
	public int updateEqDescription(EquipmentVO equipmentVO) {
		return radiationMapper.updateEqDescription(equipmentVO);
	}


	@Override
	public int requestRepair(RepairRequestVO repairRequestVO) {
		return radiationMapper.requestRepair(repairRequestVO);
	}

	@Override
	public int insertComment(CommentVO commentVO) {
		return radiationMapper.insertComment(commentVO);
	}

	@Override
	public int deleteComment(int commentNo) {
		return radiationMapper.deleteComment(commentNo);
	}

	@Override
	public List<MemberVO> radiationWaitingList() {
		return radiationMapper.radiationWaitingList();
	}

	@Override
	public MemberVO getPatntOrder(int memNo) {
		return radiationMapper.getPatntOrder(memNo);
	}

	@Override
	public int updateComment(CommentVO commentVO) {
		return radiationMapper.updateComment(commentVO);
	}

	@Override
	public boolean deleteEquipment(int eqNo) {
		boolean flag = false;
		
		int status = radiationMapper.deleteEquipment(eqNo);
		if (status > 0) {
			flag = true;
		}
		return flag;
	}

	@Override
	public boolean updateHistory(HistoryVO historyVO) {
		boolean flag = false;
		
		historyVO.setResult(0);
		
		radiationMapper.updateHistory(historyVO);
		
		int status = historyVO.getResult();
		
		if (status == 1) {
			flag = true;
		}
		
		return flag;
	}


}
