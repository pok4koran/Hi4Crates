<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<script
	src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script
	src="${pageContext.request.contextPath }/resources/assets/js/customValid.js"></script>
<script
	src="${pageContext.request.contextPath }/resources/assets/js/show-password.js"></script>
<style>
/* 추가적인 CSS 스타일링을 원하면 여기에 작성하세요 */
.h4 {
	cursor: pointer; /* 마우스 커서를 포인터로 변경하여 사용자에게 클릭 가능한 요소임을 나타냄 */
	position: relative; /* 밑줄을 절대적으로 위치시킬 수 있도록 설정 */
	display: inline-block; /* 요소의 너비가 텍스트에 맞게 설정되도록 인라인 블록 요소로 설정 */
}

.h4::after {
	content: ""; /* 가상 요소 생성 */
	position: absolute; /* 밑줄을 절대적으로 위치시킴 */
	left: 0; /* 텍스트의 왼쪽부터 밑줄을 시작함 */
	bottom: -5px; /* 밑줄의 위치를 조절함 (원하는 여백의 크기에 따라 조절) */
	width: 100%; /* 밑줄의 너비를 텍스트의 너비와 같게 설정 */
	height: 2px; /* 밑줄의 두께 설정 */
	background-color: transparent; /* 밑줄의 색상 설정 */
	transition: background-color 0.3s ease; /* 전환 효과 추가 */
}

.h4:hover::after {
	background-color: black; /* hover 상태일 때 밑줄의 색상 변경 */
}

.h4.clicked::after {
	background-color: black; /* 클릭 상태일 때 밑줄의 색상 변경 */
}

.h4.clicked {
	font-weight: bold; /* 클릭 상태일 때 글꼴 굵게 설정 */
}

.h4:hover {
	font-weight: bold; /* 마우스를 올렸을 때 글꼴 굵게 설정 */
}
.worktime {
	position : absolute;
	margin-top : 20px;
}
</style>
<!-- Start::app-content -->
<div class="main-content app-content">
	<div class="container-fluid"  style="margin-top:20px">
		<!-- Page Header Close -->

		<!-- Start::row-1 -->
		<div class="row g-2">
			<div class="col-xxl-4 col-xl-12">
				<div class="card custom-card overflow-hidden">
					<div class="card-body p-0">
						<div
							class="d-sm-flex align-items-top p-4 border-bottom-0 main-profile-cover">
							<div>
								<span class="avatar avatar-xxl avatar-rounded online me-3">
									<c:set
					       					value="${member.fileVO.attachPath}${member.fileVO.attachName }"
										var="target" /> <img
									src="/file/displayFile?fileName=${target}" alt="">
								</span>
							</div>
							<div class="flex-fill main-profile-info">
								<div class="d-flex align-items-center justify-content-between">
									<h6 class="fw-semibold mb-1 text-fixed-white">${member.memName }</h6>
									<div id="workbadge">
									<c:choose>
										<c:when test="${empty workVO }">
											<span class="badge rounded-pill bg-light" 
											style="font-size: 12px; margin-left: 15px;"><span style="color: black;">퇴근</span>
											</span>
										
										</c:when>
										<c:otherwise>
											<span class="badge rounded-pill bg-success" id="working"
												style="font-size: 12px; margin-left: 15px;">근무중</span>
										</c:otherwise>
									</c:choose>
									</div>
								</div>
								<p class="mb-1 text-muted text-fixed-white op-7">${member.empVO.empJob }</p>
								<p class="fs-12 text-fixed-white mb-4 op-5">
									<span class="me-3"><i
										class="ri-building-line me-1 align-middle"></i>${member.memPostcode }</span>
									<span><i class="ri-map-pin-line me-1 align-middle"></i>${member.memAddress1 }</span>
								</p>
								<c:if test="${empty workVO }">
								<button type="button" id="startWork"
									class="btn btn-light rounded-pill btn-wave"
									style="width: 85px;">
										<i class='bx bx-log-in' style="margin-right: 10px;"></i><span id="startWorkTime">출근</span>
								</button>
								</c:if> 
								<c:if test="${not empty workVO }">
								<button type="button" id="startWork"
									class="btn btn-light rounded-pill btn-wave"
									style="width: 85px;" disabled="disabled">
										<span id="startWorkTime">${workVO.workStartTime }</span>
								</button>
								</c:if> 
								<button type="button" id="endWork"
									class="btn btn-light rounded-pill btn-wave"
									style="margin-left: 20px; width: 85px;">
									<i class='bx bx-log-out' style="margin-right: 10px;"> </i><span id="endWorkTime">퇴근</span>
								</button>
								<button type="button" class="btn btn-primary" id="testBtn" value="실시간 알림 테스트">실시간 알림 테스트</button>
							</div>
<!-- 							<span class="worktime starttime">09:11</span><span class="worktime endtime">19:00</span> -->
						</div>
						<div class="p-4 border-bottom border-block-end-dashed">
							<div class="table-responsive">
								<table class="table text-nowrap table-striped">
									<thead style="text-align:center;">
										<tr>
											<th scope="col">총 연가일</th>
											<th scope="col">사용 연가일</th>
											<th scope="col">잔여 연가일</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<th scope="row"><span style="float: right;">15일</span></th>
											<td><span style="float: right;">${15-member.empVO.empVacation }일</span></td>
											<td><span style="float: right;">${member.empVO.empVacation}일</span></td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
						<div class="p-4 border-bottom border-block-end-dashed">
							<p>
								<span class="h4 mb-4 text-black tab-link" data-target="home1"> 내프로필 </span>
							</p>
							<p>
								<span class="h4 mb-4 text-black tab-link" data-target="home2">연가신청</span>
							</p>
						</div>
					</div>
				</div>
			</div>
			<div class="col-xxl-8 col-xl-12">
				<div class="col-xl-12">
					<div class="card custom-card">
						<div class="card-body">
							<div class="tab-content">
								<div class="tab-pane show active text-muted" id="home1"
									role="tabpanel">
									<ul class="list-group">
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">아이디 :</div>
												<span class="fs-12 text-muted">${member.memId }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">이메일 :</div>
												<span class="fs-12 text-muted">${member.memEmail }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">이름 :</div>
												<span class="fs-12 text-muted">${member.memName }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">나이 :</div>
												<span class="fs-12 text-muted">${member.memAge }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">성별 :</div>
												<span class="fs-12 text-muted">${member.memGender }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">휴대폰 번호 :</div>
												<span class="fs-12 text-muted">${member.memTel }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">주민번호 :</div>
												<span class="fs-12 text-muted">${member.memRegno1 }-${member.memRegno2}</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">주소 :</div>
												<span class="fs-12 text-muted">${member.memAddress1 },
													${member.memAddress2 }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">사번 :</div>
												<span class="fs-12 text-muted">${member.empVO.empNo }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">직무 :</div>
												<span class="fs-12 text-muted">${member.empVO.empJob }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">면허번호 :</div>
												<span class="fs-12 text-muted">${member.empVO.empLicence }</span>
											</div>
										</li>
										<li class="list-group-item">
											<div class="d-flex flex-wrap align-items-center">
												<div class="me-2 fw-semibold">입사일 :</div>
												<span class="fs-12 text-muted">${member.empVO.empHireDate }</span>
											</div>
											<input type="button" class="btn btn-primary" style="float:right;" value="프로필 변경" data-bs-toggle="modal" data-bs-target="#passChkModal">
											<input type="button" class="btn btn-primary" style="float:right; margin-right:10px;" value="비밀번호 변경" data-bs-toggle="modal" data-bs-target="#passwordModify">
										</li>
									</ul>
								</div>
								<div class="tab-pane text-muted" id="about1" role="tabpanel">
									<form action="/public/mypage/profilemodify.do" enctype="multipart/form-data" id="modifyform" method="post">
										<input type="hidden" value="${sessionScope.user.member.memNo }" name="memNo">
										<input type="hidden" id="imgVal" name="imgData">
										<div class="row gy-4">
											<div class="col-xl-12">
												<span class="avatar avatar-xxl avatar-rounded me-3"
													style="margin-left: 40%; height: 10rem; width: 10rem;">
													<img id="imgBox" src="/file/displayFile?fileName=${target}"
													alt="">
												</span><br>
											</div>
											<div class="col-12">
												<label for="input-label" class="form-label">프로필사진</label> <input
													type="file" class="form-control" style="width: 50%;"
													id="file" name="file">
											</div>
											
											<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12">
												<label for="input-label" class="form-label">아이디</label>
												<div class="input-group">
													<input type="text" class="form-control" id="memId" name="memId" value="${member.memId }"> 
													<input type="button" class="btn btn-light" id="checkId" value="중복체크">
													<div class="invalid-feedback" id="invalid-id">
													*영어와 숫자를 사용한 4~16자리의 아이디를 입력해주세요!
													</div>
												</div>
											</div>
											
											<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 ">
												<label for="input-label" class="form-label">이름</label> <input
													type="text" class="form-control" id="memName"
													name="memName" value="${member.memName }">
												<div class="invalid-feedback" id="invalid-name">*한글로
													이루어진 이름을 입력해주세요!
												</div>
											</div>
											
											<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12">
												<label for="form-control" class="form-label">전화번호</label> 
												<input type="text" class="form-control" id="memTel" name="memTel" value="${member.memTel}">
												<div class="invalid-feedback" id="invalid-tel">*010-1234-5678
													형식으로 입력해주세요</div>
											</div>
											<div class="col-xl-8 col-lg-6 col-md-6 col-sm-12">
												<label for="input-email" class="form-label">이메일</label>
												<div class="input-group">
													<input type="email" class="form-control" id="memEmail"
														name="memEmail" value="${member.memEmail }"> <input
														type="button" class="btn btn-light" id="checkEmail"
														value="인증번호 전송">
												</div>
												<div class="invalid-feedback" id="invalid-email">*이메일
													형식이 올바르지 않습니다!</div>
											</div>

											<div class="col-xl-4" style="display: none;" id="emailAuth">
												<label for="signup-email" class="form-label text-default">인증번호
													입력</label>
												<div class="input-group">
													<input type="text" class="form-control form-control-lg"
														id="authNo" placeholder="인증번호"> <input
														type="button" class="btn btn-light" id="emailAuthBtn"
														value="입력">
													<div class="invalid-feedback" id="invalid-emailAuth">*인증번호가
														일치하지 않습니다!</div>
												</div>
											</div>
											<div class="input-group">
												<input type="text" class="form-control form-control-lg"
													id="memPostcode" name="memPostcode" placeholder="우편번호"
													value="${member.memPostcode }">
												<button type="button" class="btn btn-secondary btn-flat"
													onclick="DaumPostCode()">우편번호 찾기</button>
												<div class="invalid-feedback" id="invalid-postcode">*주소를
													선택해주세요!</div>
											</div>
											<div class="col-xl-12">
												<label for="signup-add" class="form-label text-default">주소
													선택</label> <input type="text" class="form-control form-control-lg"
													id="memAddress1" name="memAddress1"
													value="${member.memAddress1 }">
												<div class="invalid-feedback" id="invalid-address1">*주소를
													선택해주세요!</div>
											</div>
											<div class="col-xl-12">
												<label for="signup-add2" class="form-label text-default">상세
													주소</label> <input type="text" class="form-control form-control-lg"
													id="memAddress2" name="memAddress2"
													value="${member.memAddress2 }">
												<div class="invalid-feedback" id="invalid-address2">*상세주소를
													입력해주세요!</div>
											</div>
										</div>
										<div class="col-xl-2 d-grid mt-2" style="float: right;">
											<input type="button" class="btn btn-lg btn-primary"
												data-bs-toggle="modal" data-bs-target="#exampleModal"
												value="수정하기">
										</div>
										<sec:csrfInput/>
									</form>
								</div>
								<!-- 연가신청 폼 -->
								<div class="tab-pane text-muted" id="home2" role="tabpanel">
<!-- <div class="container"> -->
    <div class="card custom-card">
        <div class="card-header">
            <div class="card-title">
                연가 신청 기록
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table text-nowrap table-bordered" style="text-align:center;">
                    <thead>
                        <tr>
                            <th scope="col">시작일</th>
                            <th scope="col">종료일</th>
                            <th scope="col">사용일수</th>
                            <th scope="col">기안작성일</th>
                            <th scope="col">진행 상태</th>
                        </tr>
                    </thead>
                    <tbody id="vacationBody">
                    	<c:if test="${empty vacationReqList }">
                    	<tr>
								<td colspan="5">연가 신청 기록이 존재하지 않습니다.</td>
						</tr>
                    	</c:if>
                    	<c:if test="${not empty vacationReqList }">
                    		<c:forEach items="${vacationReqList }" var="vacationReq">
                        <tr>
                            <td>${vacationReq.vacationStartDate }</td>
                            <td>${vacationReq.vacationEndDate }</td>
                            <td>${vacationReq.vacationDate}일</td>
                            <td>${vacationReq.vacationRequestDate}</td>
                            <c:if test="${vacationReq.vacationRequestStatus eq 'Y' }">
	                            <td><span class="badge rounded-pill bg-light-transparent text-dark">완료</span></td>
                            </c:if>
                            <c:if test="${vacationReq.vacationRequestStatus eq 'N' }">
	                            <td><span class="badge rounded-pill bg-danger-transparent">반려</span></td>
                            </c:if>
                            <c:if test="${empty vacationReq.vacationRequestStatus}">
	                            <td><span class="badge rounded-pill bg-success-transparent">진행중</span></td>
                            </c:if>
                        </tr>
                    		</c:forEach>
                    	</c:if>
                    </tbody>
                </table>
            </div>
        </div>
        <hr style="margin:0px; border-color:rgba(148, 145, 145, 0.289);">
        <div class="card-header">
            <div class="card-title">
                연가 기안 작성
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="daterange" class="form-label">기간</label>
                        <div class="input-group">
                            <div class="input-group-text text-muted"><i class="ri-calendar-line"></i></div>
                            <input type="text" class="form-control" id="daterange" placeholder="기간을 선택해주세요.">
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        <label for="day" class="form-label">사용일수</label>
                        <input type="text" class="form-control" id="day" value="1일" readonly>
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        <label for="duration" class="form-label">잔여일수</label>
                        <input type="text" class="form-control" id="leftover" value="14일" readonly>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="daterange" class="form-label" style="margin-top:30px;">사유</label>
                <input type="text" class="form-control" id="vacationReason">
            </div>

            <div class="form-group" style="margin-top:20px;">
                <button type="button" class="btn btn-outline-dark btn-wave" id="vacationBtn">신청</button>
            </div>
        </div>
<!--     </div> -->

								</div>
								<div class="tab-pane text-muted" id="service1" role="tabpanel">
									<b>Lorem Ipsum</b>
								</div>
							</div>
						</div>
						<!-- </div> -->
						<!-- </div> -->

					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- End::app-content -->



<!-- <button type="button" class="btn btn-primary" data-bs-toggle="modal"
        data-bs-target="#exampleModal">
        Launch demo modal
    </button>

    <div class="modal fade" id="exampleModal" tabindex="-1"
        aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title" id="exampleModalLabel1">Modal title</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3 align-items-center">
                        <div class="col-auto">
                            <label for="inputPassword6" class="col-form-label">Password</label>
                        </div>
                        <div class="col-auto">
                            <input type="password" id="inputPassword6" class="form-control"
                                aria-describedby="passwordHelpInline">
                        </div>
                        <div class="col-auto">
                            <span id="passwordHelpInline" class="form-text">
                                Must be 8-20 characters long.
                            </span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary"
                        data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save
                        changes</button>
                </div>
            </div>
        </div>
    </div> -->




<!-- 알럿 모달 -->
<div class="modal fade" id="exampleModal" tabindex="-1"
	aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
				<div class="card bg-white border-0">
					<div class="alert custom-alert1 alert-warning">
						<div class="text-center px-5 pb-0" style="margin-top: 50px">
							<svg class="custom-alert-icon svg-warning"
								xmlns="http://www.w3.org/2000/svg" height="1.5rem"
								viewBox="0 0 24 24" width="1.5rem" fill="#000000">
								<path d="M0 0h24v24H0z" fill="none" />
								<path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" /></svg>
							<h5>주의</h5>
							<p class="">정말로 개인정보를 수정하시겠습니까?</p>
							<button class="btn btn-sm btn-outline-secondary m-1"
								data-bs-dismiss="modal">취소</button>
							<button class="btn btn-sm btn-warning m-1" id="modifyBtn">수정</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- 비밀번호 검증 모달 -->
<div class="modal fade" id="passChkModal" tabindex="-1">
    <div class="modal-dialog modal-md">
        <div class="modal-content" >
            <div class="modal-header">
                <h6 class="modal-title" id="passChkModalLabel">비밀번호 인증
                </h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
            </div>
            <div class="modal-body">
                <div class="row justify-content-center">
                    <div class="mb-3">
                    <form action="">
                        <label for="form-text" class="form-label fs-14 text-dark">비밀번호</label>
                        <input type="password" class="form-control" id="memPw" placeholder="비밀번호를 입력해주세요!">
                        <div class="invalid-feedback" id="invalid-pw">*비밀번호가 틀렸습니다!</div>
                    </form>
                    </div>
                    <div>
                        <button class="btn btn-primary" type="button" id="pwChkBtn" data-param="${sessionScope.user.member.memPw}">확인</button>
                        <button class="btn btn-primary" type="button" data-bs-dismiss="modal" aria-label="모달닫기">취소</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 비밀번호 변경 모달 -->
<div class="modal fade" id="passwordModify" tabindex="-1">
    <div class="modal-dialog modal-md">
        <div class="modal-content" >
            <div class="modal-header">
                <h6 class="modal-title" id="#passwordModifyLabel">비밀번호 변경
                </h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
            </div>
            <div class="modal-body">
                <div class="row justify-content-center">
                    <div class="mb-3">
                        <label for="form-text" class="form-label fs-14 text-dark">현재 비밀번호</label>
                        <input type="password" class="form-control" id="originalPw" placeholder="비밀번호를 입력해주세요!">
                        <div class="invalid-feedback" id="invalid-pw">*비밀번호가 틀렸습니다!</div>
                        <label for="form-text" class="form-label fs-14 text-dark">변경 할 비밀번호</label>
                        <input type="password" class="form-control" id="modifyPassword1" placeholder="변경하실 비밀번호를 입력해주세요!">
                        <div class="invalid-feedback">*4~10자리 영어, 숫자, 특수문자를 포함하여 입력하여주세요!</div>
                        <label for="form-text" class="form-label fs-14 text-dark">비밀번호 확인</label>
                        <input type="password" class="form-control" id="modifyPassword2" placeholder="변경하실 비밀번호를 한번 더 입력해주세요!">
                        <div class="invalid-feedback">*비밀번호가 일치하지 않습니다!</div>
						<font color="red" id="errMsg" size="15px"></font>
                        <input type="hidden" value="${sessionScope.user.member.memNo }" id="memNo" name="memNo">
                    </div>
                    <div>
                        <button class="btn btn-primary" type="button" id="modifyPasswordBtn" data-param="${sessionScope.user.member.memPw}">확인</button>
                        <button class="btn btn-primary" type="button" data-bs-dismiss="modal" aria-label="모달닫기">취소</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>


<script>
var fullDate;

	
	$('#testBtn').on("click",function(){
		console.log("클릭");
		ws.send("vacationResult#t001#agree");
	});


$('#daterange').on("change",function(){
	fullDate = $('#daterange').val();
	let startDate = new Date(fullDate.split(' to ')[0]);
	let endDate = new Date(fullDate.split(' to ')[1]);
	let dateDiff = endDate.getTime() - startDate.getTime();
	daysDiff = dateDiff / (1000 * 3600 * 24);
	daysDiff = Math.floor(daysDiff) + 1;
	
	if(isNaN(daysDiff)) daysDiff = 1;

	
	$('#day').val(daysDiff+"일")
	let leftoverDay = ${member.empVO.empVacation};
	if(leftoverDay - daysDiff < 0){
		$('#leftover').val("잔여 일수가 초과되었습니다");
	}else{
		$('#leftover').val(leftoverDay-daysDiff +"일");
	}
});
/* 비밀번호 검증 */
$('#pwChkBtn').on("click",function(){
	console.log("클릭클릭클릭클릭")
	let memPw = $('#memPw').val();
	let memPw2 = $('#pwChkBtn').data('param');
	console.log(memPw2)
	let data = { 
			"memPw" : memPw,
			"memPw2" : memPw2
			}
	$.ajax({
		url : "/public/pwchk.do",
		type : "post",
		data : JSON.stringify(data),
		contentType : "application/json;charset=utf-8",
		success : function(res){
			console.log(res);
			if(res === "SUCCESS"){
                $("#passChkModal").modal('toggle');					
                $('#home1').removeClass('active');
                // 탭을 직접 활성화합니다.
//                 $('#about1-tab').addClass('active');
                // 탭 내용을 보여줍니다.
                $('#about1').addClass('active');
			}else if(res === "FAILED"){
				$('#memPw').addClass("is-invalid");
			}
		}
	});
});
$('#modifyBtn').on("click",function(){
	console.log("수정버튼 클릭 !");
	$('#modifyform').submit();
});
$('#modifyPasswordBtn').on("click",function(){
	let memPw = $('#originalPw').val();
	let memPw2 = $('#modifyPassword1').val();
	let memPw3 = $(this).data("param");
	let memNo = $('#memNo').val();
	let data = {
			"memPw1" : memPw,
			"memPw2" : memPw2,
			"memPw3" : memPw3,
			"memNo" : memNo
	};
	$.ajax({
		url : "/public/mypage/passwordmodify.do",
		type : "post",
		data : JSON.stringify(data),
		contentType : "application/json;charset=utf-8",
		success : function(res){
			if(res ==="SUCCESS"){
				location.href="/mypage/"+memNo;
			}
			if(res ==="FAILED"){
				$('#errMsg').text("비밀번호 변경이 실패하였습니다!");
			}
			if(res ==="!MATCH"){
				$('#errMsg').text("비밀번호 인증이 실패하였습니다!");
			}
			console.log(res)
		}
	});
});
    	
        $(function(){
        	var NO = ${sessionScope.user.member.memNo}
            var memAddress2 = $("#memAddress2");
			//카카오맵 api 사용 자원들
			var mapContainer = null;
			var map = null;
			var geocoder = null;
			var file = $('#file');
			var imgBox = $('#imgBox');
            var authCode;
			
            const $h4Elements = $('.h4');
		
            $('#vacationBtn').on("click",function(){
            	let leftOver = $('#leftover').val();
            	let dateRange = fullDate.split(' to ');
            	let startDate = dateRange[0];
            	let endDate = dateRange.length > 1 ? dateRange[1] : startDate;
            	
            	let today = new Date();
  				let writingDate = today.getFullYear()+ '년 '+(today.getMonth()+1)+'월 '+today.getDate()+'일';
            	
            	let data = {
            			"vacationStartDate" : startDate,
            			"vacationEndDate" : endDate,
            			"vacationDate" : daysDiff,
            			"memNo" : NO,
            			"vacationReason" : $('#vacationReason').val()
            	};
            	console.table(data);
            	if(leftOver === "잔여 일수가 초과되었습니다"){
            		alert('연가 잔여 일수가 초과되었습니다.');
            		return;
            	}else{
	            	$.ajax({
	            		url : "/public/vacationRequest.do",
	            		type : "post",
	            		data : JSON.stringify(data),
	            		contentType : "application/json;charset=utf-8",
	            		beforeSend: function(xhr) {
	                        // CSRF 토큰 헤더에 추가
	                       xhr.setRequestHeader($("meta[name='_csrf_header']").attr("content"), $("meta[name='_csrf']").attr("content"));
	            	},
	            		success : function(res){
// 							let html = $('#vacationBody').html();
							let html = "";
	            			if(res === "SUCCESS"){
								html += '<tr>';
								html += '<td>'+startDate.split("-")[0]+'년 '+startDate.split("-")[1]+'월 '+startDate.split("-")[2]+'일</td>';
								html += '<td>'+endDate.split("-")[0]+'년 '+endDate.split("-")[1]+'월 '+endDate.split("-")[2]+'일</td>';
								html += '<td>'+daysDiff+'일</td>';
								html += '<td>'+writingDate+'</td>';
								html += '<td><span class="badge rounded-pill bg-success-transparent">진행중</span></td>';
								html += '</tr>';
								$('#vacationBody').append(html);
								
								
								$('#daterange').val("");
								$('#day').val("");
								$('#leftover').val("");
								$('#vacationReason').val("");
							}
	            		}
	            	});
            	}
            });
            
            
            $('#startWork').on("click",function(){
            	alert("출근이요");
            	let data = {
            			"memNo" : NO
            	}
            	let $working = $('#working');
            	$.ajax({
            		url: "/public/startwork.do",
            		type : "post",
            		data : JSON.stringify(data),
            		contentType : "application/json;charset=utf-8",
            		beforeSend: function(xhr) {
                        // CSRF 토큰 헤더에 추가
                       xhr.setRequestHeader($("meta[name='_csrf_header']").attr("content"), $("meta[name='_csrf']").attr("content"));
            	},
            		success : function(res){
//             			$('#startWorkTime').text(res);
            			$('#startWork').prop('disabled',true);
						$('#startWork').html(res);
						$('#workbadge').html('<span class="badge rounded-pill bg-success" id="working" style="font-size: 12px; margin-left: 15px;">근무중</span>');
						console.log(res)
            		}
            	})
            });
		
            $('#endWork').on("click",function(){
            	alert("퇴근이요");
            	let data = {
            			"memNo" : NO
            	}
            	$.ajax({
            		url: "/public/endwork.do",
            		type : "post",
            		data : JSON.stringify(data),
            		contentType : "application/json;charset=utf-8",
            		beforeSend: function(xhr) {
                        // CSRF 토큰 헤더에 추가
                       xhr.setRequestHeader($("meta[name='_csrf_header']").attr("content"), $("meta[name='_csrf']").attr("content"));
            	},
            		success : function(res){
//             			$('#startWorkTime').text(res);
            			$('#endWork').prop('disabled',true);
						$('#endWork').html(res);
						$('#workbadge').html('<span class="badge rounded-pill bg-light"	style="font-size: 12px; margin-left: 15px;"><span style="color: black;">퇴근</span>');
            				console.log(res)
            		}
            	})
            });
            
            
            // 페이지가 로드될 때 내 프로필에 호버 이벤트와 클릭 이벤트를 설정합니다.
            $h4Elements.each(function (index, element) {
                // 처음 로드될 때 가장 위에 있는 내 프로필에 밑줄과 굵은 글씨 스타일을 적용합니다.
                if (index === 0) {
                    $(element).addClass('clicked');
                }

                $(element).on('mouseover', function () {
                    // 호버 이벤트 처리
                    console.log('마우스를 올렸습니다.');
                    // 예를 들어, 요소의 텍스트를 변경하거나 다른 작업을 수행할 수 있습니다.
                });

                $(element).on('click', function () {
                    // 클릭 이벤트 처리
                    // 다른 요소들의 클릭 클래스 제거
                    $h4Elements.removeClass('clicked');
                    // 클릭된 요소에 'clicked' 클래스 추가
                    $(this).addClass('clicked');
                });
            });
            
            
            $('.tab-link').click(function(){
                // 클릭된 탭의 data-target 속성 값 가져오기
                var targetId = $(this).data('target');
                
                // 모든 탭 컨텐츠 숨기기
                $('.tab-pane').hide();
                
                // 클릭된 탭에 해당하는 컨텐츠 보여주기
                $('#' + targetId).show();
            });
            
            file.on("change",function(){
				var files = event.target.files;
				var file = files[0];
				console.log(file);
								
				var formData = new FormData();
				formData.append("file", file);
				
				$.ajax({
					url : "/file/uploadAjax",
					type : "post",
					data : formData,
					dataType : "text",
					processData : false,
					contentType : false,
					success : function(data){
						console.log(data);
						if(checkImageType(data)){
							imgBox.attr("src", "/file/displayFile?fileName="+getThumbnailName(data));
							$('#imgVal').attr("value",data);
						}
					}
				});
			});
		});
            
            
			// 이름 검증
			$('#memName').on('blur',function(){
				memName = $('#memName').val();
			    if(validateName(memName)) {
			        $('#memName').removeClass('is-invalid');
			        $('#memName').addClass("is-valid");
			    }
			    else if(!validateName(memName)){
			        $('#memName').removeClass('is-valid');
			        $('#memName').addClass("is-invalid");
			}
			});
			
			// 아이디 검증
			$('#memId').on('blur',function(){
				memId = $('#memId').val();
			    if(validateUsername(memId)) {
			        $('#memId').removeClass('is-invalid');
			        $('#memId').addClass("is-valid");
			    }
			    else if(!validateUsername(memId)){
			        $('#memId').removeClass('is-valid');
			        $('#memId').addClass("is-invalid");
			}
			});
			
			$('#checkId').on("click",function(){
				let checkId = $('#memId').val();
				let data = {
						"checkId" : checkId
				};
				$.ajax({
					url : "/public/idChk.do",
					type : "post",
					data : JSON.stringify(data),
					contentType : "application/json; charset=utf-8",
					success : function(result){
						console.log(result);
						if(result === "OK") {
					        $('#memId').removeClass('is-invalid');
					        $('#memId').addClass("is-valid");
					       	$('#valid-id').html("*사용 가능한 아이디입니다 !");
						}
						
						if(result === "FAILED") {
					        $('#memId').removeClass('is-valid');
					        $('#memId').addClass("is-invalid");
							$('#invalid-id').html("*중복된 아이디가 존재합니다 !");
						}
					}
				});
			});
			
			// 비밀번호 정규식 검증
			$('#memPw').on('blur',function(){
				var memPw = $('#memPw').val();
			    if(validatePassword(memPw)) {
			        $('#memPw').removeClass('is-invalid');
			        $('#memPw').addClass("is-valid");
			    }
			    else if(!validatePassword(memPw)){
			        $('#memPw').removeClass('is-valid');
			        $('#memPw').addClass("is-invalid");
			}
			});
			
			// 변경할 비밀번호 정규식 검증
			$('#modifyPassword1').on('blur',function(){
				var memPw = $('#modifyPassword1').val();
			    if(validatePassword(memPw)) {
			        $('#modifyPassword1').removeClass('is-invalid');
			        $('#modifyPassword1').addClass("is-valid");
			    }
			    else if(!validatePassword(memPw)){
			        $('#modifyPassword1').removeClass('is-valid');
			        $('#modifyPassword1').addClass("is-invalid");
			}
			});
			// 변경할 비밀번호 확인 검증
			$('#modifyPassword2').on('blur',function(){
				var memPw = $('#modifyPassword1').val();
				var memPw2 = $('#modifyPassword2').val();
			    if(correctPassword(memPw,memPw2)) {
			        $('#modifyPassword2').removeClass('is-invalid');
			        $('#modifyPassword2').addClass("is-valid");
			    }
			    else if(!correctPassword(memPw,memPw2)){
			        $('#modifyPassword2').removeClass('is-valid');
			        $('#modifyPassword2').addClass("is-invalid");
			}
			});
			
			// 이메일 검증
			$('#checkEmail').on("click",function(){
				var memEmail = $('#memEmail').val();
			    if(validateEmail(memEmail)) {
			        $('#memEmail').removeClass('is-invalid');
			        $('#memEmail').addClass("is-valid");

			    }
			    else if(!validateEmail(memEmail)){
			        $('#memEmail').removeClass('is-valid');
			        $('#memEmail').addClass("is-invalid");
			        return;
			    }
				let obj = { "email" : memEmail};
				$.ajax({
					url : "/public/emailAuth",
					data : JSON.stringify(obj),
					type : "POST",
					contentType : "application/json;charset=utf-8",
					success:function(res){
						console.log("result : "+res);
						authCode = res;
					}
				});
				$('#emailAuth').css('display', 'block');
			});
		
			// 이메일 인증번호 확인
			$('#emailAuthBtn').on('click',function(){
				let authNo = $('#authNo').val();	
				console.log(authNo);
				console.log(authCode);
				if(authNo === authCode.toString() ) {
					$('#authNo').prop("disabled",true);
					$('#emailAuthBtn').prop("disabled",true);
					alert('인증번호가 일치합니다!');
					$('#authNo').removeClass("is-invalid");
				}else{
					$('#authNo').addClass("is-invalid");
					alert('인증번호가 일치하지 않습니다');
				}
			});
			
			// 주민등록번호 검증
			$('#memRegno').on('blur',function(){
				var memRegno = $('#memRegno').val();
				if(validateResidentNumber(memRegno)) {
		        	$('#memRegno').removeClass('is-invalid');
			        $('#memRegno').addClass("is-valid");
			    }
			    else if(!validateResidentNumber(memRegno)){
			        $('#memRegno').removeClass('is-valid');
			        $('#memRegno').addClass("is-invalid");
				}
			});
			
		    $('#memTel').on('input', function () {
		        // 현재 입력된 전화번호를 가져옵니다.
		        let telNumber = $(this).val();
		        
		        // 전화번호에서 숫자만 남기고 나머지는 모두 제거합니다.
		        telNumber = telNumber.replace(/\D/g, '');
		        
		        // 전화번호를 010-0000-0000 형식으로 변환합니다.
		        if (telNumber.length >= 4 && telNumber.length <= 11) {
		            telNumber = telNumber.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
		        }
		        
		        // 변환된 전화번호를 다시 입력 필드에 넣어줍니다.
		        $(this).val(telNumber);
		    });
		    
			// 전화번호 검증
			$('#memTel').on('blur',function(){
				var memTel = $('#memTel').val();
				if(validatePhoneNumber(memTel)) {
		        	$('#memTel').removeClass('is-invalid');
			        $('#memTel').addClass("is-valid");
			    }
			    else if(!validatePhoneNumber(memTel)){
			        $('#memTel').removeClass('is-valid');
			        $('#memTel').addClass("is-invalid");
				}
			});
			
			$('#memAddress1').on('blur',function(){
				var memAddress1 = $('#memAddress1').val();
				var memAddress2 = $('#memAddress2').val();
				if(memAddress1 == null) {
					$('#memAddress1').removeClass('is-valid');
					$('#memAddress1').addClass('is-invalid');
				}
				if(memAddress1 != null) {
					$('#memAddress1').removeClass('is-invalid');
					$('#memAddress1').addClass('is-valid');
				}
			});
			$('#memAddress2').on('blur',function(){
				var memAddress2 = $('#memAddress2').val();
				if(memAddress2 != null) {
					$('memAddress2').removeClass('is-invalid');
					$('#memAddress2').addClass('is-valid');
				}
				if(memAddress2 == null) {
					$('#memAddress2').removeClass('is-valid');
					$('#memAddress2').addClass('is-invalid');
				}
			});

		

        function DaumPostCode() {
        new daum.Postcode(
                {
                    oncomplete : function(data) {
                        // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                        // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                        var addr = ''; // 주소 변수
                        var extraAddr = ''; // 참고항목 변수

                        //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                        if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                            addr = data.roadAddress;
                        } else { // 사용자가 지번 주소를 선택했을 경우(J)
                            addr = data.jibunAddress;
                        }

                        // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                        if (data.userSelectedType === 'R') {
                            // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                            // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                            if (data.bname !== ''
                                    && /[동|로|가]$/g.test(data.bname)) {
                                extraAddr += data.bname;
                            }
                            // 건물명이 있고, 공동주택일 경우 추가한다.
                            if (data.buildingName !== ''
                                    && data.apartment === 'Y') {
                                extraAddr += (extraAddr !== '' ? ', '
                                        + data.buildingName
                                        : data.buildingName);
                            }
                        }

                        // 우편번호와 주소 정보를 해당 필드에 넣는다.
                        document.getElementById('memPostcode').value = data.zonecode;
                        document.getElementById("memAddress1").value = addr;
                        // 커서를 상세주소 필드로 이동한다.
                        document.getElementById("memAddress2").focus();
                    }
                }).open();
        }

		function getThumbnailName(fileName){
			var front = fileName.substr(0, 12); // 년 월 일 에 해당하는 폴더 경로
			var end = fileName.substr(12);		// 뒤쪽 파일명
			
			console.log(front);
			console.log(end);
			
			return front + "s_" + end;
		}
		
		function checkImageType(fileName){
			//정규식에서 i는 대소문자 구분없음을 나타냄
			var pattern = /jpg|gif|png|jpeg/i;
			return fileName.match(pattern); //패턴과 일치하면 이미지로 판단
		}
    </script>