<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>


        <!-- Start::app-content -->
        <div class="main-content app-content">
            <div class="container-fluid">

                <!-- Start::row-1 -->
                <div class="row">
                    <div class="col-xxl-2 col-xl-12">
						<div class="col-xxl-12 col-xl-6">
							<div class="card custom-card">
								<div class="card-header justify-content-between">
									<div class="card-title">환자목록</div>
								</div>
								<div class="card-body" id="waitingList" style="overflow-y: auto; height: 900px;" >
								</div>
							</div>
						</div>
					</div>
                    <div class="col-xl-4">
                        <div class="card custom-card" style="height: 50vh;">
                            <div class="card-header">
                                <div class="card-title">
                                    	촬영 요청서 확인
                                </div>
                            </div>
                            <div class="card-body" id="orderArea" data-simplebar style="overflow-y: auto;">
                            	
                            </div>
                        </div>
                        <div class="row-xl-3">
                            <div class="card custom-card" style="height: 25vh;">
                                <div class="card-header">
                                    <div class="card-title">
                                        	방사선실 현황
                                    </div>
                                </div>
                                <div class="card-body" style="overflow-y: auto;" id="radiationRoomArea">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="row">
                            <div class="col-xl-12">
                                <div class="card custom-card">
                                    <div class="card-header d-flex justify-content-between">
                                        <div class="card-title">
                                           	 촬영 결과 소견서 작성
                                        </div>
                                    </div>
                                    <div class="card-body">
                                    	<div class="mb-3">
                                    		환자명 : <input type="text" class="form-control" id="memNameInp"/>
                                    		사용 장비 : <input type="text" class="form-control" id="useEq"/>
                                    		촬영 부위 : <select class="form-control" id="bodyCodeSelect">
                                    				</select>
                                    		기록 내용 : <textarea class="form-control" id="rocRecordcontent"></textarea>
                                    		촬영 사진 : 
                                    		<div id="images"></div>
										</div>
                                        <button type="button" class="form-control btn btn-info" id="insertRocRecord">등록</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--End::row-1 -->

            </div>
        </div>
        <!-- End::app-content -->

    <!-- Scroll To Top -->
    <div class="scrollToTop">
        <span class="arrow"><i class="ri-arrow-up-s-fill fs-20"></i></span>
    </div>
    <div id="responsive-overlay"></div>
    <!-- Scroll To Top -->

    <!-- Popper JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/@popperjs/core/umd/popper.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Defaultmenu JS -->
    <%-- <script src="${pageContext.request.contextPath }/resources/assets/js/defaultmenu.min.js"></script> --%>

    <!-- Node Waves JS-->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/node-waves/waves.min.js"></script>

    <!-- Sticky JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/js/sticky.js"></script>

    <!-- Simplebar JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/simplebar/simplebar.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/js/simplebar.js"></script>

    <!-- Color Picker JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/@simonwep/pickr/pickr.es5.min.js"></script>
    
    <!-- Custom JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/js/custom.js"></script>

    <!-- Custom-Switcher JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/js/custom-switcher.min.js"></script>

    <!-- Prism JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/prismjs/prism.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/js/prism-custom.js"></script>
    
    <!-- Modal JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/js/radiation_modal.js"></script>

    
    <!-- Filepond JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond/filepond.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-preview/filepond-plugin-image-preview.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-exif-orientation/filepond-plugin-image-exif-orientation.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-file-validate-size/filepond-plugin-file-validate-size.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-file-encode/filepond-plugin-file-encode.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-edit/filepond-plugin-image-edit.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-file-validate-type/filepond-plugin-file-validate-type.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-file-validate-type/filepond-plugin-file-validate-type.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-crop/filepond-plugin-image-crop.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-resize/filepond-plugin-image-resize.min.js"></script>
    <script src="${pageContext.request.contextPath }/resources/assets/libs/filepond-plugin-image-transform/filepond-plugin-image-transform.min.js"></script>
    
    <!-- Dropzone JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/libs/dropzone/dropzone-min.js"></script>
    
    <!-- Fileupload JS -->
    <script src="${pageContext.request.contextPath }/resources/assets/js/fileupload.js"></script>
    
    <!-- Custom JS -->
    <%-- <script src="${pageContext.request.contextPath }/resources/assets/js/custom.js"></script> --%>

</body>
<script>
	//세션에서 데이터 가져오기
	const allSessionData = {};
	
	const imageFiles = [];
	
	function previewImage(file) {
	    const reader = new FileReader();
	    reader.onload = function(event) {
	        const img = $('<img>').attr('src', event.target.result);
	        $('#images').append(img); // 미리보기 이미지를 표시할 곳에 추가
	    };
	    reader.readAsDataURL(file);
	}
	
	console.log(sessionStorage.length);
	// sessionStorage의 모든 키에 대해 반복하여 값을 가져와서 객체에 저장
	for (let i = 0; i < sessionStorage.length; i++) {
	    const key = sessionStorage.key(i); // 현재 인덱스의 키 가져오기
	    const value = sessionStorage.getItem(key); // 해당 키에 대한 값 가져오기
	    
	    console.log(key);
	    console.log(value);
	    
	    if (key == 'memName') {
			console.log(key);
			console.log(value);
			let memNameInp = $('#memNameInp');
			memNameInp.val(value);
			
		} else if (key == 'orderNo') {
			console.log("orderNo");
			console.log(key);
			console.log(value);
			
		} else if (key.startsWith("OD")) { // 이 부분 변경해야 할듯?
			let array = JSON.parse(value);
			console.log(key.substr(2));
			let orderNo = parseInt(key.substr(2));
			console.log(orderNo);
			// orderNo로 bodyCode 가져오면 될거 같음
			$.ajax({
				url : "/radiation/getBodyCode",
				type : "post",
				data : JSON.stringify({ orderNo : orderNo }),
				contentType : "application/json; charset=utf-8",
				success : function(res) {
					console.log(res);
					// 가져온 bodyCode select에 추가하기
					if (res != null || res != "") {
						let newOption = $('<option>');
						newOption.text(res);
						newOption.val(orderNo);
						$('#bodyCodeSelect').append(newOption);
					}
				}
			});
			
			/* console.log(array);
			$.each(array, function(index, item) {
				console.log(item);
				const blob = dataURItoBlob(item.data); // base64로 인코딩된 이미지 데이터를 Blob 객체로 변환
		        const file = new File([blob], key, { type: 'image/jpeg' }); // Blob 객체를 File 객체로 변환
		        console.log(file);
		        previewImage(file);  // 이미지 미리보기 	
			}); */
		} 
	    
	    
	    allSessionData[key] = value; // 객체에 키-값 쌍 추가
	}
	
	// 모든 sessionStorage 데이터가 담긴 객체 출력
	console.log(allSessionData);
	
	$('#bodyCodeSelect').change(function() {
		// select option 변경될 때마다 이미지 다르게 띄워주기 (데이터 있어야 테스트 가능할듯)
		$('#images').html("");
		console.log("test");
		let val = $(this).val();
		console.log(val);
		let imgs = sessionStorage.getItem("OD" + val);
		console.log(JSON.parse(imgs));
		$.each(JSON.parse(imgs), function(index, item) {
			const blob = dataURItoBlob(item.data); // base64로 인코딩된 이미지 데이터를 Blob 객체로 변환
	        const file = new File([blob], "OD" + val, { type: 'image/jpeg' }); // Blob 객체를 File 객체로 변환
	        console.log(file);
	        previewImage(file);  // 이미지 미리보기 	
		});
		
	});
	
	function dataURItoBlob(dataURI) {
		console.log(dataURI);
	    const byteString = atob(dataURI.split(',')[1]);
	    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
	    const ab = new ArrayBuffer(byteString.length);
	    const ia = new Uint8Array(ab);
	    for (let i = 0; i < byteString.length; i++) {
	        ia[i] = byteString.charCodeAt(i);
	    }
	    const blob = new Blob([ab], { type: mimeString });
	    return blob;
	}
	
    function getWaitingList(){
        $.ajax({
            url: '/radiation/radiationWaitingList',
            type: 'POST',
            dataType: 'json', // 서버에서 응답으로 JSON을 사용하는 경우
            success: function(data) {
                // 서버에서 받은 데이터를 처리하여 HTML 업데이트
                console.log("data!!!");
                console.log(data);
                
                let html = '';
                let options = [
                    {value: 'LOC014', text: '대기실'},
                    {value: 'LOC010', text: '방사선실1'},
                    {value: 'LOC011', text: '방사선실2'}
                ];
                $.each(data, function(index, item) {
                	console.log("orderList")
                	console.log(item);
                	console.log(item.orderList);
                	
                    html += '<div class="card border custom-card hrm-main-card primary">';
                    html += '    <div class="card-header" style="padding: 4%;">';
                    html += '        <h8 class="fw-semibold mt-1" style="padding: -10%;">' + item.codeName + '</h8>';
                    html += '    </div>';
                    html += '    <div class="card-body">';
                    html += '        <div class="d-flex align-items-top">';
                    html += '            <div class="me-3">';
                    html += '                <span class="avatar bg-primary"> <i class="ri-team-line fs-18"></i></span>';
                    html += '            </div>';
                    html += '            <div class="row">';
                    html += '                <h6 class="fw-semibold mt-1">';
                    html += '                    <a href="javascript:void(0)" id="watingMemName" data-memNo="'+item.memNo+'">' + item.memName + '</a>';
                    html += '                    <input type="hidden" value="' + item.receiptNo + '">';
                    html += '                    <select id="statusSelect">';
                    $.each(options, function(index, option) {
                        if (item.historyLoc === option.value) {
                            html += '				<option value="' + option.value + '" selected>' + option.text + '</option>';
                        } else {
                            html += '				<option value="' + option.value + '">' + option.text + '</option>';
                        }
                    });
                    html += '                    </select>'; // select 닫음
                    html += '                </h6>';
                    html += '                <div>';
                    html += '                    <span class="fs-12 mb-0">' + item.memGender + ', ' + item.memAge + '세</span>';
                    html += '                </div>';
                    html += '                <div>'; // 추가된 부분
                    $.each(item.orderList, function(index, orderItem) {
                        html += '				<span>' + orderItem.bodyCode + '</span><br>';
                    });
                    html += '                </div>'; // 추가된 부분
                    html += '            </div>';
                    html += '        </div>';
                    html += '    </div>';
                    html += '</div>';
                });
                // HTML 업데이트
                $('#waitingList').html(html);
            },
            error: function(xhr, status, error) {
                console.error(xhr.responseText); // 에러 처리
            }
        });
     }
     // 페이지 로드 후 처음 한 번 요청을 실행
     getWaitingList();

     // 3초마다 비동기 요청 반복 실행
     // setInterval(getWaitingList, 10000);
    
    
     
     $('body').on('click','#watingMemName',function(event){
    	 
     	event.preventDefault();
     	
     	let memNo = $(this).attr('data-memNo');
     	
     	console.log(memNo);
     	
     	let data = {
     			memNo : memNo
     	}
     	
     	$.ajax({
     		url : "/radiation/getPatntOrder",
     		type : "post",
     		contentType : "application/json",
     		data : JSON.stringify(data),
     		success : function (res) {
				console.log(res);
				
				// json데이터로 order 화면에 띄워주기(수정해야함)
				let orderArea = $('#orderArea');
				let html = "";
				html += res.memName + "<br/>";
				html += res.memGender + "<br/>";
				html += res.orderName + "<br/>";
				html += res.bodyCode + "<br/>";
				html += res.chartDate + "<br/>";
				html += res.chartRecord + "<br/>";
				html += res.docName + "<br/>";
				orderArea.html(html);
			}
     	});
     });
     
     // 방사선실 현황 비동기로 다시
     function getRadiationRoomList() {
    	 $.ajax({
    	    	url : "/radiation/radiationRoomList",
    	    	type : "get",
    	    	success : function (res) {
    	    		console.log(res);
    	    		
    				let radiationRoomArea = $('#radiationRoomArea');
    				let html = "";
    				$.each(res, function(index, item) {
    					html += '<div class="d-flex align-items-center">';
    					html += '	<div class="orders-delivery-address">';
    					html += '		<a href="/radiation/radiationRoom?roomNo='+item.rocNo+'">';
    					html += '			<p class="mb-1 fw-semibold">'+item.rocName+'</p>';
    					html += '		</a>';
    					html += '		<p class="text-muted mb-0">';
    					html += '			 촬영중인 환자 정보 넣기';
    					html += '		</p>';
    					html += '	</div>';
    					html += '	<div class="ms-auto">';
    					if (item.rocStatus.trim() == "ROC002") {
	    					html += '		<span class="badge bg-danger">'+item.rocStatusname+'</span>';
						} else {
	    					html += '		<span class="badge bg-info">'+item.rocStatusname+'</span>';
						}
    					html += '	</div>';
    					html += '</div>';
    					html += '<br/>';
    				});
    				radiationRoomArea.html(html);
    			}
    	 });
	 }
     
     // 페이지 로드 시 한번 실행
     getRadiationRoomList();
     
     // 일정 시간마다 반복실행(상태 업데이트 될때마다 실행되게 하기)
     // setInterval(getRadiationRoomList, 10000);
    
  // select의 부모 요소에 이벤트 위임
  	let preRoomNo;
     $('#waitingList').on('change', 'select', function() {
         let locCodeNo = $(this).val();
         console.log('Selected value:', locCodeNo);
         let historyStatus = "HS001";
         
         let rocStatus = "ROC001";
         let rocNo = 1;
         
         if (locCodeNo == "LOC010" || locCodeNo == "LOC011") {
        	 historyStatus = "HS004";
        	 rocStatus = "ROC002"
        	 
        	 if (locCodeNo == "LOC011") {
				rocNo = 2;
			}
		}
         
         if (locCodeNo == 'LOC014') {
			rocNo = preRoomNo;
		}
         
         preRoomNo = rocNo;
         
         let $parentDiv = $(this).closest('.row');
         let $input = $parentDiv.find('input[type="hidden"]');
         
         // 가져온 input의 값 출력
         let receiptNo = $input.val();
         
         let data = {
        	historyLoc : locCodeNo,
        	receiptNo : receiptNo,
			historyStatus : historyStatus,
			radiationRoomVO : {
				rocStatus : rocStatus,
				rocNo : rocNo
			}
         };
         
         // history update
         $.ajax({
        	url : "/radiation/updateHistory",
        	type : "post",
        	data : JSON.stringify(data),
        	contentType : "application/json",
        	success : function(res) {
				console.log(res);
				if (res) {
					getRadiationRoomList();
				}
			}
        	 
         });
         
         
     });
        let insertRocRecordBtn = $('#insertRocRecord');
        insertRocRecordBtn.click(function() {
			// 여기서 입력한 값들과 파일을 formData로 전송하기
			// formData에 담아서 전송!!!
			console.log("insertBtn!!!");
			// FormData 객체 생성
			const formData = new FormData();
			
			let orderNo = $('#bodyCodeSelect').val();
			
			formData.append("orderNo", orderNo);
			
			let fileDataArray = [];
			
			// sessionStorage에 있는 파일과 데이터를 FormData에 추가
			for (let i = 0; i < sessionStorage.length; i++) {
			    let key = sessionStorage.key(i); // 현재 인덱스의 키 가져오기
			    let value = sessionStorage.getItem(key); // 해당 키에 대한 값 가져오기
			    
			    // 이미지나 파일 구분할 수 있는 키로 가져오는거 수정하기
			    if (key == 'memName') {
			        formData.append(key, value); // 데이터 추가
			    } else if (key == "OD" + orderNo) {
			    	console.log(key);
			    	console.log(value);
			    	$.each(JSON.parse(value), function (index, item) {
			    		console.log(item.name);
				        var blob = dataURItoBlob(item.data); // base64로 인코딩된 이미지 데이터를 Blob 객체로 변환
				        console.log("blob!!!");
				        console.log(blob);
				        var file = new File([blob], item.name, { type: 'image/jpeg' }); // Blob 객체를 File 객체로 변환
				        fileDataArray.push({ key: item.name, value: file });
					})
			    }
			}
			
			console.log("array!");
			console.log(fileDataArray);
			
			for (let i = 0; i < fileDataArray.length; i++) {
				console.log(fileDataArray[i].value);
				formData.append("files", fileDataArray[i].value, fileDataArray[i].key + ".jpg");
			}
			
			let useEq = $('#useEq').val();
			let rocRecordcontent = $('#rocRecordcontent').val();
			
			formData.append("rocEqno", useEq);
			formData.append("rocRecordcontent", rocRecordcontent);
			formData.append("rocNo", sessionStorage.getItem("rocNo"));
			
			for (let key of formData.keys()) {
			    console.log("Key:", key);
			    const values = formData.getAll(key); // 같은 키의 모든 값을 배열로 가져옴
			    console.log("Values:", values);
			    values.forEach(value => {
			        console.log(key, ":", value); // 각 값을 출력
			    });
			}
			
       	  $.ajax({
     		url : "/radiation/insertRocRecord",
     		type : "post",
     		data : formData,
     		dataType : "text",
     		processData : false,
     		contentType : false,
     		async : false,
     		success : function(res) {
     			console.log(res);
     			// "success", "fail"에 따라 처리해주기
     		}
     	});
		
	});
</script>

</html>