package kr.or.ddit.controller.nurse;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.apache.commons.io.FilenameUtils;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.google.gson.Gson;

import kr.or.ddit.service.INurseService;
import kr.or.ddit.vo.BedVO;
import kr.or.ddit.vo.MedicineVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.OrderVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/nurse")
@Slf4j
public class NurseController {

	@Inject
	private INurseService nurseService;

	// 간호사 메인 페이지
	@RequestMapping(value = "/main", method = RequestMethod.GET)
	public String nursePage(Model model) {
		log.info("nurse main!!!");

		// 병실 상태 조회
		// List<BedVO> bedList = nurseService.getBedList();

		return "nurse/nurseMain";
	}

	// 입원 페이지
	@RequestMapping(value = "/hospitalization", method = RequestMethod.GET)
	public String hospitalizationPage(Model model) {

		// 입원환자 리스트 가져오기
		List<MemberVO> hospitalizeList = nurseService.getHospitalizeList();
		log.info("size : " + hospitalizeList.size());

		for (int i = 0; i < hospitalizeList.size(); i++) {
			MemberVO info = hospitalizeList.get(i);
			log.info("환자 번호 : "+info.getPatientVO().getPatntNo());
			log.info("환자명 : "+info.getMemName());
			log.info("호실 : "+info.getBedVO().getWardVO().getWardNo());
			log.info("침대번호 : "+info.getBedVO().getBedNo());
			log.info("담당의 사번 : "+info.getEmpVO().getEmpNo());
			log.info("담당의 : "+info.getEmpName());
			
		}
		// 입원환자 리스트 model에 담기
		model.addAttribute("hospitalizeList", hospitalizeList);

		return "nurse/hospitalizationPage";
	}
	
	// 입원환자 상세정보 가져오기
	@ResponseBody
	@RequestMapping(value = "/getHospitalizePatntInfo")
	public ResponseEntity<MemberVO> getHospitalizePatntInfo(@RequestBody Map<String, Integer> patntMap) {
		log.info("환자 번호 : " + patntMap.get("patntNo"));
		int patntNo = patntMap.get("patntNo");
		MemberVO member = nurseService.getHospitalizePatntInfo(patntNo);
		
		return new ResponseEntity<MemberVO>(member, HttpStatus.OK);
	}

	// 오더 조회
	@ResponseBody
	@RequestMapping(value = "/getPatntOrder", method = RequestMethod.POST)
	public ResponseEntity<OrderVO> getPatntOrder(@RequestBody int patntNo) {
		OrderVO orderVO = nurseService.getPatntOrder(patntNo);
		return new ResponseEntity<OrderVO>(orderVO, HttpStatus.OK);
	}

	// 근무 스케줄 조회 페이지
	@RequestMapping(value = "/schedule", method = RequestMethod.GET)
	public String nurseSchedule() {
		return "nurse/nurseSchedule";
	}
	
	
	// 간호사 근무 스케줄 조회(나중에 수정할 예정)
	@ResponseBody
	@RequestMapping(value = "/getSchedule", method = RequestMethod.POST)
	public Map<String, Object> getSchedule(MultipartHttpServletRequest request) {
		
		Map<String, Object> response = new HashMap<>();
		
		MultipartFile file = null;
		Iterator<String> miterator = request.getFileNames();
		if (miterator.hasNext()) {
			file = request.getFile(miterator.next());
		}
		
		if (file == null) {
			response.put("status", "error");
			return response;
		}
		
		List<ExcelVO> dataList = ExcelUpload.getExcelList(file);
		System.out.println("dataList : " + dataList);

		response.put("dataList", dataList);
		response.put("status", "success");
			
		return response;
	}

	// 의약품 조회 페이지
	@RequestMapping(value = "/medicineList", method = RequestMethod.GET)
	public String medicineListPage(Model model) {

		// 의약품 리스트 가져오기
		List<MedicineVO> medicineList = nurseService.getMedicineList();

		// 의약품 리스트 model에 담기
		model.addAttribute("medicineList", medicineList);
		
		return "nurse/medicineList";
	}

	// 의약품 신청 페이지
	@RequestMapping(value = "/medicineApplication", method = RequestMethod.GET)
	public String medicineApplicationPage() {

		return "nurse/medicineApplication";
	}
}
